{"version":3,"file":"index.umd.js","sources":["../src/assets/asset.ts","../src/assets/image-asset.ts","../src/constants/asset-type.ts","../src/assets/precomposition-asset.ts","../node_modules/cross-fetch/dist/browser-ponyfill.js","../src/constants/blend-mode.ts","../src/constants/fill-rule-type.ts","../src/constants/gradient-fill-type.ts","../src/constants/gradient-stroke-type.ts","../src/constants/layer-type.ts","../src/constants/line-cap-type.ts","../src/constants/line-join-type.ts","../src/constants/mask-mode.ts","../src/constants/property-type.ts","../src/constants/shape-type.ts","../src/constants/trim-mode.ts","../src/constants/repeater-composite.ts","../src/constants/star-type.ts","../src/constants/matte-mode.ts","../src/constants/effect-type.ts","../src/constants/effect-value-type.ts","../src/constants/text-caps.ts","../src/constants/text-grouping.ts","../src/constants/text-justify.ts","../src/constants/text-based.ts","../src/constants/text-shape.ts","../src/timeline/key-frame.ts","../src/utils/use-registry.ts","../src/values/color.ts","../src/values/text-document.ts","../src/properties/property.ts","../src/properties/gradient.ts","../src/properties/transform.ts","../src/shapes/shape.ts","../src/shapes/ellipse-shape.ts","../src/shapes/fill-shape.ts","../src/shapes/gradient-fill-shape.ts","../src/shapes/group-shape.ts","../src/shapes/path-shape.ts","../src/shapes/rectangle-shape.ts","../src/shapes/stroke-shape.ts","../src/shapes/trim-shape.ts","../src/shapes/gradient-stroke-shape.ts","../src/shapes/repeater-shape.ts","../src/shapes/star-shape.ts","../src/shapes/rounded-corners-shape.ts","../src/shapes/merge-shape.ts","../src/shapes/offset-path-shape.ts","../src/shapes/pucker-bloat-shape.ts","../src/shapes/twist-shape.ts","../src/shapes/zig-zag-shape.ts","../src/utils/shape.ts","../src/fonts/character.ts","../src/fonts/font.ts","../src/fonts/font-list.ts","../src/effects/effect-value.ts","../src/effects/effect.ts","../src/masks/mask.ts","../src/layers/layer.ts","../src/layers/group-layer.ts","../src/layers/image-layer.ts","../src/layers/precomposition-layer.ts","../src/layers/shape-layer.ts","../src/layers/solid-layer.ts","../src/text/text-selector.ts","../src/text/text-transform.ts","../src/text/text-animator.ts","../src/text/text-options.ts","../src/text/text-data.ts","../src/layers/text-layer.ts","../src/markers/marker.ts","../src/utils/color-spaces.ts","../src/animation/meta.ts","../src/animation/animation.ts"],"sourcesContent":["/**\n * Asset base class.\n */\nexport abstract class Asset {\n  public abstract fromJSON(json: Record<string, any>): Asset;\n  public abstract toJSON(): Record<string, any>;\n\n  /**\n   * Parent instance.\n   */\n  public parent: any;\n\n  /**\n   * Constructor.\n   *\n   * @param parent   Parent instance.\n   */\n  constructor(parent: any) {\n    this.parent = parent;\n  }\n}\n","import { Asset } from './asset';\n\n/**\n * Image asset type.\n */\nexport class ImageAsset extends Asset {\n  public data?: string;\n\n  public id?: string;\n\n  public height!: number;\n\n  public path?: string;\n\n  public width!: number;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ImageAsset instance\n   */\n  public fromJSON(json: Record<string, any>): ImageAsset {\n    this.data = json.p;\n    this.id = json.id;\n    this.height = json.h;\n    this.path = json.u;\n    this.width = json.w;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      h: this.height,\n      id: this.id,\n      p: this.data,\n      u: this.path,\n      w: this.width,\n    };\n  }\n}\n","export enum AssetType {\n  PRECOMPOSITION = 0,\n  IMAGE = 1,\n}\n","import { AssetType } from '../constants/asset-type';\nimport { Layer } from '../layers';\nimport { Asset } from './asset';\n\n/**\n * Precomposition asset type.\n */\nexport class PrecompositionAsset extends Asset {\n  public readonly type = AssetType.PRECOMPOSITION;\n\n  public layers: Layer[] = [];\n\n  public id = '';\n\n  public timeRemap: any;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       PrecompositionAsset instance\n   */\n  public fromJSON(json: Record<string, any>): PrecompositionAsset {\n    // This asset props\n    this.id = json.id;\n    this.timeRemap = json.tm;\n\n    this.layers = this.parent.createLayersFromJSONArray(json.layers);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      id: this.id,\n      layers: this.layers.map(layer => layer.toJSON()),\n      tm: this.timeRemap,\n    };\n  }\n}\n","var __self__ = (function (root) {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = root.DOMException\n}\nF.prototype = root;\nreturn new F();\n})(typeof self !== 'undefined' ? self : this);\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n}({}));\n})(__self__);\ndelete __self__.fetch.polyfill\nexports = __self__.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = __self__.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = __self__.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = __self__.Headers\nexports.Request = __self__.Request\nexports.Response = __self__.Response\nmodule.exports = exports\n","export enum BlendMode {\n  NORMAL = 0,\n  MULTIPLY = 1,\n  SCREEN = 2,\n  OVERLAY = 3,\n  DARKEN = 4,\n  LIGHTEN = 5,\n  COLOR_DODGE = 6,\n  COLOR_BURN = 7,\n  HARD_LIGHT = 8,\n  SOFT_LIGHT = 9,\n  DIFFERENCE = 10,\n  EXCLUSION = 11,\n  HUE = 12,\n  SATURATION = 13,\n  COLOR = 14,\n  LUMINOSITY = 15,\n}\n","export enum FillRuleType {\n  EVEN_ODD = 1,\n  NONZERO = 2,\n}\n","export enum GradientFillType {\n  NONE = 0,\n  LINEAR = 1,\n  RADIAL = 2,\n  ANGULAR = 4,\n  REFLECTED = 5,\n  DIAMOND = 6,\n}\n","export enum GradientStrokeType {\n  LINEAR = 1,\n  RADIAL = 2,\n}\n","/**\n * LayerType type.\n */\nexport enum LayerType {\n  PRECOMPOSITION = 0,\n  SOLID = 1,\n  IMAGE = 2,\n  GROUP = 3,\n  SHAPE = 4,\n  TEXT = 5,\n  AUDIO = 6,\n  VIDEO_PLACEHOLDER = 7,\n  IMAGE_SEQUENCE = 8,\n  VIDEO = 9,\n  IMAGE_PLACEHOLDER = 10,\n  GUIDE = 11,\n  ADJUSTMENT = 12,\n  CAMERA = 13,\n  LIGHT = 14,\n}\n","export enum LineCapType {\n  BUTT = 1,\n  ROUND = 2,\n  PROJECTING = 3,\n}\n","export enum LineJoinType {\n  MITER = 1,\n  ROUND = 2,\n  BEVEL = 3,\n}\n","export enum MaskMode {\n  None = 'n',\n  Add = 'a',\n  Subtract = 's',\n  Intersect = 'i',\n  Lighten = 'l',\n  Darken = 'd',\n  Difference = 'f',\n}\n","export enum PropertyType {\n  AMOUNT = 'am',\n  ANCHOR = 'a',\n  ANGLE = 'an',\n  OPACITY = 'o',\n  POSITION = 'p',\n  POINTS = 'pt',\n  ROTATION = 'r',\n  ROTATION_X = 'rx',\n  ROTATION_Y = 'ry',\n  ROTATION_Z = 'rz',\n  SCALE = 's',\n  SKEW_AXIS = 'sa',\n  SKEW = 'sk',\n  SHAPE = 'sh',\n  EXPANSION = 'x',\n  FEATHER = 'f',\n  SIZE = 'sz',\n  ROUNDNESS = 'rd',\n  MITER_LIMIT = 'ml',\n  STROKE_WIDTH = 'sw',\n  NUMBER = 'nu',\n  COLOR = 'cl',\n  ORIENTATION = 'or',\n  GRADIENT = 'gr',\n  EFFECT_VALUE = 'v',\n  TEXT_DATA = 'd',\n  TEXT_ALIGNMENT = 'ta',\n  MAX_EASE = 'xe',\n  MIN_EASE = 'ne',\n  MAX_AMOUNT = 'ma',\n  RANGE_UNITS = 'rn',\n  OFFSET = 'of',\n  EXPRESSION_SELECTOR = 'sm',\n  START = 'st',\n  END = 'e',\n  SATURATION = 'fs',\n  HUE = 'fh',\n  BRIGHTNESS = 'fb',\n  TEXT_TRACKING = 't',\n  CENTER = 'cn',\n  RADIUS = 'ra',\n  DISTANCE = 'ds',\n}\n","export enum ShapeType {\n  ELLIPSE = 'el',\n  FILL = 'fl',\n  GRADIENT_FILL = 'gf',\n  GRADIENT_STROKE = 'gs',\n  GROUP = 'gr',\n  MERGE = 'mm',\n  OFFSET_PATH = 'op',\n  PATH = 'sh',\n  RECTANGLE = 'rc',\n  REPEATER = 'rp',\n  ROUNDED_CORNERS = 'rd',\n  STAR = 'sr',\n  STROKE = 'st',\n  TRIM = 'tm',\n  TWIST = 'tw',\n  PUCKER_BLOAT = 'pb',\n  ZIG_ZAG = 'zz',\n}\n","export enum TrimMode {\n  SIMULTANEOUSLY = 1,\n  INDIVIDUALLY = 2,\n}\n","export enum RepeaterComposite {\n  ABOVE = 1,\n  BELOW = 2,\n}\n","export enum StarType {\n  STAR = 1,\n  POLYGON = 2,\n}\n","export enum MatteMode {\n  NORMAL,\n  ALPHA,\n  INVERTED_ALPHA,\n  LUMA,\n  INVERTED_LUMA,\n}\n","export enum EffectType {\n  NONE = 0,\n  CUSTOM = 5,\n  PAINT_OVER_TRANSPARENT = 7,\n  TINT = 20,\n  FILL = 21,\n  STROKE = 22,\n  TRITONE = 23,\n  PRO_LEVELS = 24,\n  DROP_SHADOW = 25,\n  RADIAL_WIPE = 26,\n  DISPLACEMENT_MAP = 27,\n  MATTE3 = 28,\n  GAUSSIAN_BLUR = 29,\n  MESH_WRAP = 31,\n  WAVY = 32,\n  SPHERIZE = 33,\n  PUPPET = 34,\n}\n","export enum EffectValueType {\n  SLIDER = 0,\n  ANGLE = 1,\n  COLOR = 2,\n  POINT = 3,\n  CHECKBOX = 4,\n  IGNORED = 6,\n  DROPDOWN = 7,\n  LAYER = 10,\n}\n","export enum TextCaps {\n  REGULAR,\n  ALL_CAPS,\n  SMALL_CAPS,\n}\n","export enum TextGrouping {\n  CHARACTERS = 1,\n  WORD,\n  LINE,\n  ALL,\n}\n","export enum TextJustify {\n  LEFT,\n  RIGHT,\n  CENTER,\n  JUSTIFY_LAST_LINE_LEFT,\n  JUSTIFY_LAST_LINE_RIGHT,\n  JUSTIFY_LAST_LINE_CENTER,\n  JUSTIFY_LAST_LINE_FULL,\n}\n","export enum TextBased {\n  CHARACTERS = 1,\n  CHARACTER_EXCLUDING_SPACES = 2,\n  WORDS = 3,\n  LINES = 4,\n}\n","export enum TextShape {\n  SQUARE = 1,\n  RAMP_UP = 2,\n  RAMP_DOWN = 3,\n  TRIANGLE = 4,\n  ROUND = 5,\n  SMOOTH = 6,\n}\n","import { Value } from '../values';\n\n/**\n * Represents a keyframe in the timeline with the frame number and associated property value.\n */\nexport class KeyFrame {\n  public frame = 0;\n  public value: number | number[] | Value = 0;\n  public frameInTangent?: [number, number] = [0, 0];\n  public frameOutTangent?: [number, number] = [1, 1];\n  public valueInTangent?: [number, number];\n  public valueOutTangent?: [number, number];\n  public hold = false;\n\n  public constructor(frame = 0, value: number | number[] | Value = 0) {\n    this.frame = frame;\n    this.value = value;\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       KeyFrame instance\n   */\n  public fromJSON(json: Record<string, any>, valueClass: any = undefined): KeyFrame {\n    this.frame = json.t;\n\n    if (valueClass === undefined) this.value = json.s;\n    else this.value = valueClass.fromJSON(json.s);\n\n    const hasFrameTangents = 'i' in json && 'o' in json;\n    const hasValueTangents = 'ti' in json && 'to' in json;\n\n    this.frameInTangent = hasFrameTangents ? [json.i.x, json.i.y] : undefined;\n    this.frameOutTangent = hasFrameTangents ? [json.o.x, json.o.y] : undefined;\n\n    if (hasValueTangents) {\n      if (json.ti && 'x' in json.ti && 'y' in json.ti) {\n        this.valueInTangent = [json.ti.x, json.ti.y];\n      } else {\n        this.valueInTangent = json.ti;\n      }\n\n      if (json.to && 'x' in json.to && 'y' in json.to) {\n        this.valueOutTangent = [json.to.x, json.to.y];\n      } else {\n        this.valueOutTangent = json.to;\n      }\n    }\n\n    // this.valueOutTangent = hasValueTangents\n    //   ? ['x' in json.to ? json.to.x : json.to[0], 'y' in json.to ? json.to.y : json.to[1]]\n    //   : undefined;\n\n    this.hold = 'h' in json && json.h;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json: Record<string, any> = {\n      // This shape\n      t: this.frame,\n      s: this.value,\n    };\n\n    if (this.hold) {\n      json.h = 1;\n    } else if (this.frameInTangent && this.frameOutTangent) {\n      json.i = { x: this.frameInTangent[0], y: this.frameInTangent[1] };\n      json.o = { x: this.frameOutTangent[0], y: this.frameOutTangent[1] };\n    }\n\n    if (this.valueInTangent && this.valueOutTangent) {\n      json.ti = this.valueInTangent;\n      json.to = this.valueOutTangent;\n    }\n\n    return json;\n  }\n}\n","import { Property } from '../properties';\n\n/**\n * Global store to keep track of properties and values\n */\nconst registry: Map<Property, any> = new Map();\n\n/**\n * Returns the instance of registry.\n */\nexport function useRegistry(): Map<Property, any> {\n  return registry;\n}\n","import { Value } from './value';\n\nexport abstract class Color implements Value {\n  protected abstract toRgbArray(): number[];\n  protected abstract toRgbArrayWebsafe(): number[];\n  public abstract websafeColors(): void;\n\n  toJSON(): number[] {\n    return this.toRgbArray();\n  }\n\n  toJSONWebsafe(): number[] {\n    return this.toRgbArrayWebsafe();\n  }\n\n  static fromJSON(json: number[]): Color {\n    if (json.length > 3) return ColorRgba.fromJSON(json);\n    else if (json.length == 3) return ColorRgb.fromJSON(json);\n    else return new ColorRgb(0, 0, 0);\n  }\n}\n\nexport class ColorRgb extends Color {\n  public r: number;\n  public g: number;\n  public b: number;\n\n  constructor(r: number, g: number, b: number) {\n    super();\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  public websafeColors() {\n    this.r = Math.round(this.r * 255);\n    this.g = Math.round(this.g * 255);\n    this.b = Math.round(this.b * 255);\n  }\n\n  protected toRgbArray(): number[] {\n    return [this.r, this.g, this.b];\n  }\n\n  protected toRgbArrayWebsafe(): number[] {\n    return [this.r * 255, this.g * 255, this.b * 255];\n  }\n\n  static fromJSON(json: number[]): ColorRgb {\n    return new ColorRgb(json[0], json[1], json[2]);\n  }\n}\n\nexport class ColorRgba extends ColorRgb {\n  public a: number;\n\n  constructor(r: number, g: number, b: number, a = 1) {\n    super(r, g, b);\n    this.a = a;\n  }\n\n  public websafeColors() {\n    this.r = Math.round(this.r * 255);\n    this.g = Math.round(this.g * 255);\n    this.b = Math.round(this.b * 255);\n  }\n\n  protected toRgbArray(): number[] {\n    return [this.r, this.g, this.b, this.a];\n  }\n\n  protected toRgbArrayWebsafe(): number[] {\n    return [this.r * 255, this.g * 255, this.b * 255, this.a];\n  }\n\n  static fromJSON(json: number[]): ColorRgba {\n    return new ColorRgba(json[0], json[1], json[2], json[3]);\n  }\n}\n","import { TextCaps, TextJustify } from '../constants';\nimport { Color, ColorRgb } from './color';\nimport { Value } from './value';\n\nexport class TextDocument implements Value {\n  public fontFamily = '';\n  public fontColor: Color = new ColorRgb(0, 0, 0);\n  public fontSize = 0;\n  public text = '';\n\n  public lineHeight?: number;\n  public boxSize?: [number, number];\n  public justify?: TextJustify;\n  public textCaps?: TextCaps;\n  public textTracking?: number;\n  public strokeColor?: Color;\n  public strokeWidth?: number;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TextDocument instance\n   */\n  public static fromJSON(json: Record<string, any>): TextDocument {\n    const document = new TextDocument();\n\n    document.fontFamily = json.f;\n    document.fontColor = Color.fromJSON(json.fc);\n    document.fontSize = json.s;\n    document.lineHeight = json.lh;\n    document.boxSize = json.sz;\n    document.text = json.t;\n    document.justify = json.j;\n    document.textCaps = json.ca;\n    document.textTracking = json.tr;\n    document.strokeWidth = json.sw;\n\n    if ('sc' in json) {\n      document.strokeColor = Color.fromJSON(json.sc);\n    }\n\n    return document;\n  }\n\n  public toJSON(): any {\n    return {\n      f: this.fontFamily,\n      fc: this.fontColor,\n      s: this.fontSize,\n      lh: this.lineHeight,\n      sz: this.boxSize,\n      t: this.text,\n      j: this.justify,\n      ca: this.textCaps,\n      tr: this.textTracking,\n      sc: this.strokeColor,\n      sw: this.strokeWidth,\n    };\n  }\n}\n","import { PropertyType } from '../constants';\nimport { KeyFrame } from '../timeline';\nimport { useRegistry } from '../utils/use-registry';\nimport { TextDocument } from '../values';\nimport { Color } from '../values/color';\n\n/**\n * Represents animated properties of layers and shapes.\n */\nexport class Property {\n  public UID = 0;\n\n  public readonly type: PropertyType;\n\n  public expression?: string;\n\n  public isAnimated = false;\n\n  public index?: number;\n\n  public maxColors?: number;\n\n  public values: Array<KeyFrame> = [];\n\n  /**\n   * Parent instance.\n   *\n   * @protected\n   */\n  private _parent: any;\n\n  public getParent(): any {\n    return this._parent;\n  }\n\n  /**\n   * Constructor.\n   *\n   * @param parent      Parent instance the property belongs to.\n   * @param type        Property type.\n   */\n  constructor(parent: any, type: PropertyType, values: Array<KeyFrame> = []) {\n    this._parent = parent;\n\n    this.type = type;\n    this.values = values;\n    this.isAnimated = values.length > 1;\n\n    useRegistry().set(this, parent);\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ShapeLayer instance\n   */\n  public fromJSON(json: Record<string, any>): Property {\n    // This property\n    this.expression = 'x' in json ? json.x : undefined;\n    this.index = json.ix;\n    this.isAnimated = json.a === 1;\n\n    let valueClass: any = undefined;\n    if (this.type == PropertyType.COLOR) valueClass = Color;\n    else if (this.type == PropertyType.TEXT_DATA) valueClass = TextDocument;\n\n    this.values =\n      this.isAnimated || this.type == PropertyType.TEXT_DATA\n        ? json.k.map((v: Record<string, any>) => new KeyFrame().fromJSON(v, valueClass))\n        : [new KeyFrame().fromJSON({ t: 0, s: json.k }, valueClass)];\n\n    if (this.type === PropertyType.COLOR) {\n      this.maxColors = 'p' in json ? json.p : undefined;\n\n      // this.values.forEach((kf: KeyFrame) => {\n      //   const colorParts = kf.value as [number, number, number, number];\n\n      //   kf.value = [colorParts[0], colorParts[1], colorParts[2], colorParts[3] || 1];\n      // });\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    let value;\n    const animated = this.isAnimated || this.values.length > 1 || this.type === PropertyType.TEXT_DATA;\n    if (animated) {\n      value = this.values;\n    } else {\n      value = this.values.length ? this.values[0].value : 0;\n    }\n\n    return {\n      x: this.expression,\n      ix: this.index,\n      a: animated ? 1 : 0,\n      k: value,\n      p: this.maxColors,\n    };\n  }\n}\n","import { PropertyType } from '../constants';\nimport { KeyFrame } from '../timeline/key-frame';\nimport { Property } from './property';\n\nexport class GradientStop {\n  public offset: number;\n  public color: number[];\n\n  constructor(offset = 0, color: number[] = []) {\n    this.offset = offset;\n    this.color = color;\n  }\n\n  get hasAlpha(): boolean {\n    return this.color.length > 3;\n  }\n\n  get red(): number {\n    return this.color[0];\n  }\n\n  get green(): number {\n    return this.color[1];\n  }\n\n  get blue(): number {\n    return this.color[2];\n  }\n\n  get alpha(): number | undefined {\n    return this.color[3];\n  }\n}\n\nclass GradientColorsProperty extends Property {\n  public colorCount = 0;\n\n  private keyframeValue(index: number): number[] {\n    if (index >= this.values.length) return [];\n    return this.values[index].value as number[];\n  }\n\n  public keyframeHasAlpha(index: number): boolean {\n    return this.keyframeValue(index).length == this.colorCount * 6;\n  }\n\n  public keframeStops(index: number): GradientStop[] {\n    const values = this.keyframeValue(index);\n    const stops: GradientStop[] = [];\n    const hasAlpha = this.keyframeHasAlpha(index);\n    for (let i = 0; i < this.colorCount; i++) {\n      const color = values.slice(i, 3);\n      if (hasAlpha) color.push(values[this.colorCount * 4 + i * 2]);\n      stops.push(new GradientStop(values[i * 4], color));\n    }\n    return stops;\n  }\n\n  public setKeyframeStops(index: number, stops: GradientStop[]) {\n    if (index >= this.values.length) return;\n    if (stops.length > this.colorCount) this.colorCount = stops.length;\n    this.values[index].value = this.stopsToArray(stops);\n  }\n\n  public addKeyframe(frame: number, stops: GradientStop[]) {\n    const keyframe: KeyFrame = new KeyFrame(frame, this.stopsToArray(stops));\n    if (stops.length > this.colorCount) this.colorCount = stops.length;\n    this.values.push(keyframe);\n    return keyframe;\n  }\n\n  private stopsToArray(stops: GradientStop[]): number[] {\n    let hasAlpha = false;\n    const result: number[] = [];\n    for (const color of stops) {\n      result.push(color.offset);\n      result.push(color.red);\n      result.push(color.green);\n      result.push(color.blue);\n      if (color.hasAlpha) hasAlpha = true;\n    }\n\n    if (hasAlpha) {\n      for (const color of stops) {\n        result.push(color.offset);\n        result.push(color.alpha !== undefined ? color.alpha : 1);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport class Gradient {\n  public gradientColors: GradientColorsProperty = new GradientColorsProperty(this, PropertyType.GRADIENT);\n\n  public get colorCount(): number {\n    return this.gradientColors.colorCount;\n  }\n\n  public set colorCount(count: number) {\n    this.gradientColors.colorCount = count;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      p: this.colorCount,\n      k: this.gradientColors,\n    };\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Gradient instance\n   */\n  public fromJSON(json: Record<string, any>): Gradient {\n    this.gradientColors.fromJSON(json.k);\n    this.colorCount = json.p;\n    return this;\n  }\n}\n","import { PropertyType } from '../constants';\nimport { KeyFrame } from '../timeline/key-frame';\nimport { Property } from './property';\n\nexport class Transform {\n  public anchor: Property = new Property(this, PropertyType.ANCHOR, [new KeyFrame(0, [0, 0])]);\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY, [new KeyFrame(0, 100)]);\n\n  public position: Property = new Property(this, PropertyType.POSITION, [new KeyFrame(0, [0, 0])]);\n\n  public rotation?: Property = new Property(this, PropertyType.ROTATION, [new KeyFrame(0, 0)]);\n\n  public scale: Property = new Property(this, PropertyType.SCALE, [new KeyFrame(0, [100, 100])]);\n\n  public skew?: Property = new Property(this, PropertyType.SKEW);\n\n  public skewAxis?: Property = new Property(this, PropertyType.SKEW_AXIS);\n\n  public orientation?: Property;\n  public rotationX?: Property;\n  public rotationY?: Property;\n  public rotationZ?: Property;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Transform instance\n   */\n  public fromJSON(json: Record<string, any>): this {\n    this.rotation = 'r' in json ? new Property(this, PropertyType.ROTATION).fromJSON(json.r) : undefined;\n    'o' in json && this.opacity.fromJSON(json.o);\n    'p' in json && this.position.fromJSON(json.p);\n    'a' in json && this.anchor.fromJSON(json.a);\n    's' in json && this.scale.fromJSON(json.s);\n    this.skew = 'sk' in json ? new Property(this, PropertyType.SKEW).fromJSON(json.sk) : undefined;\n    this.skewAxis = 'sa' in json ? new Property(this, PropertyType.SKEW_AXIS).fromJSON(json.sa) : undefined;\n\n    if ('or' in json) {\n      this.orientation = new Property(this, PropertyType.ORIENTATION).fromJSON(json.or);\n    }\n\n    if ('rx' in json) {\n      this.rotationX = new Property(this, PropertyType.ROTATION_X).fromJSON(json.rx);\n    }\n\n    if ('ry' in json) {\n      this.rotationY = new Property(this, PropertyType.ROTATION_Y).fromJSON(json.ry);\n    }\n\n    if ('rz' in json) {\n      this.rotationZ = new Property(this, PropertyType.ROTATION_Z).fromJSON(json.rz);\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      a: this.anchor,\n      o: this.opacity,\n      p: this.position,\n      r: this.rotation,\n      s: this.scale,\n      sk: this.skew,\n      sa: this.skewAxis,\n      rx: this.rotationX,\n      ry: this.rotationY,\n      rz: this.rotationZ,\n      or: this.orientation,\n    };\n  }\n}\n","import { ShapeType } from '../constants';\n\n/**\n * Shape base class.\n */\nexport abstract class Shape {\n  /**\n   * Shape type\n   */\n  public abstract readonly type: ShapeType;\n\n  public classNames?: string;\n\n  public matchName?: string;\n\n  public name?: string;\n\n  public id?: string;\n\n  public itemIndex?: number;\n  public shapeIndex?: number;\n\n  public isHidden = false;\n\n  /**\n   * Parent instance.\n   */\n  public parent: any;\n\n  /**\n   * Constructor.\n   *\n   * @param parent   Parent instance.\n   */\n  constructor(parent: any) {\n    this.parent = parent;\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       EllipseShape instance\n   */\n  public fromJSON(json: Record<string, any>): Shape {\n    // Base shape\n    this.classNames = json.cl;\n    this.id = json.ln;\n    this.isHidden = json.hd;\n    this.matchName = json.mn;\n    this.name = json.nm;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n\n      // Base shape\n      cl: this.classNames,\n      hd: this.isHidden,\n      ln: this.id,\n      mn: this.matchName,\n      nm: this.name,\n    };\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Ellipse shape type.\n */\nexport class EllipseShape extends Shape {\n  /**\n   * Shape type\n   */\n  public readonly type = ShapeType.ELLIPSE;\n\n  public position: Property = new Property(this, PropertyType.POSITION);\n\n  public size: Property = new Property(this, PropertyType.SIZE);\n\n  public direction = 1;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       EllipseShape instance\n   */\n  public fromJSON(json: Record<string, any>): EllipseShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.position.fromJSON(json.p);\n    this.size.fromJSON(json.s);\n    this.direction = json.d;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      p: this.position,\n      s: this.size,\n      d: this.direction,\n    });\n  }\n}\n","import { KeyFrame } from '..';\nimport { BlendMode, FillRuleType } from '../constants';\nimport { PropertyType } from '../constants/property-type';\nimport { ShapeType } from '../constants/shape-type';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Fill shape type.\n */\nexport class FillShape extends Shape {\n  /**\n   * Fill shape type: fl\n   */\n  public readonly type = ShapeType.FILL;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public direction?: number;\n\n  public color: Property = new Property(this, PropertyType.COLOR);\n\n  public fillRule: FillRuleType = FillRuleType.EVEN_ODD;\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY, [new KeyFrame(0, 100)]);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       FillShape instance\n   */\n  public fromJSON(json: Record<string, any>): FillShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.blendMode = json.bm;\n    this.color.fromJSON(json.c);\n    this.fillRule = json.r in FillRuleType ? json.r : FillRuleType.EVEN_ODD;\n    this.opacity.fromJSON(json.o);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      // This shape\n      bm: this.blendMode,\n      c: this.color,\n      r: this.fillRule,\n      o: this.opacity,\n    });\n  }\n}\n","import { BlendMode, FillRuleType, GradientFillType, PropertyType, ShapeType } from '../constants';\nimport { Gradient, Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Gradient fill shape type.\n */\nexport class GradientFillShape extends Shape {\n  /**\n   * Gradient shape type: gf\n   */\n  public readonly type = ShapeType.GRADIENT_FILL;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public endPoint: Property = new Property(this, PropertyType.POSITION);\n\n  public gradientColors: Gradient = new Gradient();\n\n  public gradientType: GradientFillType = GradientFillType.LINEAR;\n\n  public highlightAngle: Property = new Property(this, PropertyType.NUMBER);\n\n  public highlightLength: Property = new Property(this, PropertyType.NUMBER);\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public startPoint: Property = new Property(this, PropertyType.POSITION);\n\n  public fillRule: FillRuleType = FillRuleType.EVEN_ODD;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GradientFillShape instance\n   */\n  public fromJSON(json: Record<string, any>): GradientFillShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.blendMode = json.bm;\n    this.endPoint.fromJSON(json.e);\n    this.gradientColors.fromJSON(json.g);\n    this.gradientType = json.t;\n    this.opacity.fromJSON(json.o);\n    this.startPoint.fromJSON(json.s);\n    this.fillRule = json.r;\n\n    if (this.gradientType === GradientFillType.RADIAL) {\n      this.highlightAngle.fromJSON(json.a);\n      this.highlightLength.fromJSON(json.h);\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      // This shape\n      bm: this.blendMode,\n      e: this.endPoint,\n      g: this.gradientColors,\n      t: this.gradientType,\n      a: this.highlightAngle,\n      h: this.highlightLength,\n      o: this.opacity,\n      r: this.fillRule,\n      s: this.startPoint,\n    });\n  }\n}\n","import { BlendMode, ShapeType } from '../constants';\nimport { Transform } from '../properties';\nimport { createShapeFromType } from '../utils/shape';\nimport { Shape } from './shape';\n\n/**\n * Group shape type.\n */\nexport class GroupShape extends Shape {\n  /**\n   * Group shape type: gr\n   */\n  public readonly type = ShapeType.GROUP;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public contentPropertyIndex?: number;\n\n  public isHidden = false;\n\n  public numProperties = 0;\n\n  public propertyIndex?: number;\n\n  public transform: Transform = new Transform();\n\n  public shapes: Shape[] = [];\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GroupShape instance\n   */\n  public fromJSON(json: Record<string, any>): GroupShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.blendMode = json.bm;\n    this.contentPropertyIndex = json.cix;\n    this.propertyIndex = json.ix;\n    this.numProperties = json.np;\n\n    this.shapes = json.it\n      .map((jShape: Record<string, any>) => {\n        try {\n          if (jShape.ty !== 'tr') {\n            const nShape = this.createShape(jShape.ty);\n            return nShape.fromJSON(jShape);\n          } else {\n            this.transform.fromJSON(jShape);\n          }\n        } catch {\n          // Swallow\n        }\n\n        return false;\n      })\n      .filter(Boolean);\n    return this;\n  }\n  /**\n   * Creates and returns a new shape instance of given type.\n   *\n   * @param type  Shape type string.\n   */\n  public createShape(type: ShapeType): Shape {\n    return createShapeFromType(type, this);\n  }\n\n  /**\n   * Adds a shape to the Layer\n   */\n  public addShape(shape: ShapeType | Shape): Shape {\n    if (!(shape instanceof Shape)) shape = this.createShape(shape);\n\n    this.shapes.push(shape);\n\n    return shape;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n    const shapes = JSON.parse(JSON.stringify(this.shapes));\n\n    shapes.push({\n      ty: 'tr',\n      nm: 'Transform',\n      ...this.transform.toJSON(),\n    });\n\n    return Object.assign(json, {\n      // This shape\n      bm: this.blendMode,\n      cix: this.contentPropertyIndex,\n      it: shapes,\n      ix: this.propertyIndex,\n      np: this.numProperties,\n    });\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Path shape type.\n */\nexport class PathShape extends Shape {\n  /**\n   * Path shape type: sh\n   */\n  public readonly type = ShapeType.PATH;\n\n  public direction?: number;\n\n  public vertices: Property = new Property(this, PropertyType.SHAPE);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       PathShape instance\n   */\n  public fromJSON(json: Record<string, any>): PathShape {\n    // Base shape\n    super.fromJSON(json);\n    this.itemIndex = json.ind;\n    this.shapeIndex = json.ix;\n\n    // This shape\n    this.direction = json.d;\n    this.vertices.fromJSON(json.ks);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      ind: this.itemIndex,\n      ix: this.shapeIndex,\n\n      // This shape\n      d: this.direction,\n      ks: this.vertices,\n    });\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Rectangle shape type.\n */\nexport class RectangleShape extends Shape {\n  /**\n   * Rectangle shape type: rc\n   */\n  public readonly type = ShapeType.RECTANGLE;\n\n  public direction?: number;\n\n  public position: Property = new Property(this, PropertyType.POSITION);\n\n  public roundness: Property = new Property(this, PropertyType.ROUNDNESS);\n\n  public size: Property = new Property(this, PropertyType.SIZE);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       RectangleShape instance\n   */\n  public fromJSON(json: Record<string, any>): RectangleShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.direction = json.d;\n    this.position.fromJSON(json.p);\n    this.roundness.fromJSON(json.r);\n    this.size.fromJSON(json.s);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      // This shape\n      d: this.direction,\n      p: this.position,\n      r: this.roundness,\n      s: this.size,\n    });\n  }\n}\n","import { BlendMode, LineCapType, LineJoinType, PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { KeyFrame } from '../timeline/key-frame';\nimport { Shape } from './shape';\n\n/**\n * Stroke shape type.\n */\nexport class StrokeShape extends Shape {\n  /**\n   * Shape type\n   */\n  public readonly type = ShapeType.STROKE;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public color: Property = new Property(this, PropertyType.COLOR);\n\n  /**\n   * Line cap.\n   *\n   * Mapped field: lc\n   */\n  public lineCapType: LineCapType = LineCapType.ROUND;\n\n  /**\n   * Line join.\n   *\n   * Mapped field: lj\n   */\n  public lineJoinType: LineJoinType = LineJoinType.ROUND;\n\n  /**\n   * Miter limit.\n   *\n   * Mapped field: ml\n   */\n  public miterLimit!: number;\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY, [new KeyFrame(0, 100)]);\n\n  public width: Property = new Property(this, PropertyType.STROKE_WIDTH);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       StrokeShape instance\n   */\n  public fromJSON(json: Record<string, any>): StrokeShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.blendMode = json.bm in BlendMode ? json.bm : BlendMode.NORMAL;\n    this.color.fromJSON(json.c);\n    this.lineCapType = json.lc in LineCapType ? json.lc : LineCapType.ROUND;\n    this.lineJoinType = json.lj in LineJoinType ? json.lj : LineJoinType.ROUND;\n    this.miterLimit = json.ml;\n    this.opacity.fromJSON(json.o);\n    this.width.fromJSON(json.w);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      bm: this.blendMode,\n      c: this.color,\n      lc: this.lineCapType,\n      lj: this.lineJoinType,\n      ml: this.miterLimit,\n      o: this.opacity,\n      w: this.width,\n    });\n  }\n}\n","import { BlendMode, PropertyType, ShapeType } from '../constants';\nimport { TrimMode } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Trim shape type.\n */\nexport class TrimShape extends Shape {\n  /**\n   * Shape type\n   */\n  public readonly type = ShapeType.TRIM;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public trimEnd: Property = new Property(this, PropertyType.NUMBER);\n\n  public trimOffset: Property = new Property(this, PropertyType.NUMBER);\n\n  public trimStart: Property = new Property(this, PropertyType.NUMBER);\n\n  public trimMultipleShapes: TrimMode = TrimMode.SIMULTANEOUSLY;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TrimShape instance\n   */\n  public fromJSON(json: Record<string, any>): TrimShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.blendMode = json.bm in BlendMode ? json.bm : BlendMode.NORMAL;\n    this.trimEnd.fromJSON(json.e);\n    this.trimOffset.fromJSON(json.o);\n    this.trimStart.fromJSON(json.s);\n    this.trimMultipleShapes = json.m in TrimMode ? json.m : TrimMode.INDIVIDUALLY;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      bm: this.blendMode,\n      e: this.trimEnd,\n      o: this.trimOffset,\n      s: this.trimStart,\n      m: this.trimMultipleShapes,\n    });\n  }\n}\n","import { BlendMode, GradientFillType, LineCapType, LineJoinType, PropertyType, ShapeType } from '../constants';\nimport { Gradient, Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Gradient stroke shape type.\n */\nexport class GradientStrokeShape extends Shape {\n  /**\n   * Gradient shape type: gs\n   */\n  public readonly type = ShapeType.GRADIENT_STROKE;\n\n  public blendMode: BlendMode = BlendMode.NORMAL;\n\n  public endPoint: Property = new Property(this, PropertyType.POSITION);\n\n  public gradientColors: Gradient = new Gradient();\n\n  public gradientType: GradientFillType = GradientFillType.LINEAR;\n\n  public highlightAngle: Property = new Property(this, PropertyType.NUMBER);\n\n  public highlightLength: Property = new Property(this, PropertyType.NUMBER);\n\n  public opacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public startPoint: Property = new Property(this, PropertyType.POSITION);\n\n  /**\n   * Line cap.\n   *\n   * Mapped field: lc\n   */\n  public lineCapType: LineCapType = LineCapType.ROUND;\n\n  /**\n   * Line join.\n   *\n   * Mapped field: lj\n   */\n  public lineJoinType: LineJoinType = LineJoinType.ROUND;\n\n  /**\n   * Miter limit.\n   *\n   * Mapped field: ml\n   */\n  public miterLimit!: number;\n\n  public width: Property = new Property(this, PropertyType.STROKE_WIDTH);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GradientFillShape instance\n   */\n  public fromJSON(json: Record<string, any>): GradientStrokeShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.blendMode = json.bm;\n    this.opacity.fromJSON(json.o);\n\n    // Gradient\n    this.endPoint.fromJSON(json.e);\n    this.gradientColors.fromJSON(json.g);\n    this.gradientType = json.t;\n    this.startPoint.fromJSON(json.s);\n\n    if (this.gradientType === GradientFillType.RADIAL) {\n      this.highlightAngle.fromJSON(json.a);\n      this.highlightLength.fromJSON(json.h);\n    }\n\n    // Stroke\n    this.lineCapType = json.lc in LineCapType ? json.lc : LineCapType.ROUND;\n    this.lineJoinType = json.lj in LineJoinType ? json.lj : LineJoinType.ROUND;\n    this.miterLimit = json.ml;\n    this.width.fromJSON(json.w);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      // This shape\n      bm: this.blendMode,\n      o: this.opacity,\n\n      // Gradient\n      e: this.endPoint,\n      g: this.gradientColors,\n      t: this.gradientType,\n      a: this.highlightAngle,\n      h: this.highlightLength,\n      s: this.startPoint,\n\n      // Stroke\n      lc: this.lineCapType,\n      lj: this.lineJoinType,\n      ml: this.miterLimit,\n      w: this.width,\n    });\n  }\n}\n","import { PropertyType, RepeaterComposite, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Repeater shape type.\n */\nexport class RepeaterShape extends Shape {\n  /**\n   * Repeater shape type: rp\n   */\n  public readonly type = ShapeType.REPEATER;\n\n  public anchor: Property = new Property(this, PropertyType.ANCHOR);\n\n  public startOpacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public endOpacity: Property = new Property(this, PropertyType.OPACITY);\n\n  public position: Property = new Property(this, PropertyType.POSITION);\n\n  public rotation: Property = new Property(this, PropertyType.ROTATION);\n\n  public scale: Property = new Property(this, PropertyType.SCALE);\n\n  public shapes: Shape[] = [];\n\n  public skew: Property = new Property(this, PropertyType.SKEW);\n\n  public skewAxis: Property = new Property(this, PropertyType.SKEW_AXIS);\n\n  public copies: Property = new Property(this, PropertyType.NUMBER);\n\n  public offset: Property = new Property(this, PropertyType.NUMBER);\n\n  public composition: RepeaterComposite = RepeaterComposite.ABOVE;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GroupShape instance\n   */\n  public fromJSON(json: Record<string, any>): RepeaterShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.copies.fromJSON(json.c);\n    this.composition = json.m;\n    this.offset.fromJSON(json.o);\n\n    this.anchor.fromJSON(json.tr.a);\n    this.startOpacity.fromJSON(json.tr.so);\n    this.endOpacity.fromJSON(json.tr.eo);\n    this.position.fromJSON(json.tr.p);\n    this.rotation.fromJSON(json.tr.r);\n    this.scale.fromJSON(json.tr.s);\n\n    if (json.tr.sk) {\n      this.skew.fromJSON(json.tr.sk);\n    }\n\n    if (json.tr.sa) {\n      this.skewAxis.fromJSON(json.tr.sa);\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      m: this.composition,\n      c: this.copies,\n      o: this.offset,\n      tr: {\n        a: this.anchor,\n        so: this.startOpacity,\n        eo: this.endOpacity,\n        p: this.position,\n        r: this.rotation,\n        s: this.scale,\n        sk: this.skew,\n        sa: this.skewAxis,\n      },\n    });\n  }\n}\n","import { PropertyType, ShapeType, StarType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Star shape type.\n */\nexport class StarShape extends Shape {\n  /**\n   * Shape type\n   */\n  public readonly type = ShapeType.STAR;\n\n  public position: Property = new Property(this, PropertyType.POSITION);\n\n  public innerRadius: Property = new Property(this, PropertyType.NUMBER);\n\n  public innerRoundness: Property = new Property(this, PropertyType.NUMBER);\n\n  public outerRadius: Property = new Property(this, PropertyType.NUMBER);\n\n  public outerRoundness: Property = new Property(this, PropertyType.NUMBER);\n\n  public rotation: Property = new Property(this, PropertyType.ROTATION);\n\n  public points: Property = new Property(this, PropertyType.NUMBER);\n\n  public starType: StarType = StarType.STAR;\n\n  public direction?: number;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       StarShape instance\n   */\n  public fromJSON(json: Record<string, any>): StarShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.position.fromJSON(json.p);\n\n    // poly star has two types. these two fields only exist on type 1. see star types in constants folder for reference\n    if (json.sy === 1) {\n      this.innerRadius.fromJSON(json.ir);\n      this.innerRoundness.fromJSON(json.is);\n    }\n    this.outerRadius.fromJSON(json.or);\n    this.outerRoundness.fromJSON(json.os);\n    this.rotation.fromJSON(json.r);\n    this.points.fromJSON(json.pt);\n    this.starType = json.sy;\n    this.direction = json.d;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      // This shape\n      p: this.position,\n      ...(this.starType === 1 && { ir: this.innerRadius }),\n      ...(this.starType === 1 && { is: this.innerRoundness }),\n      or: this.outerRadius,\n      os: this.outerRoundness,\n      r: this.rotation,\n      pt: this.points,\n      sy: this.starType,\n      d: this.direction,\n    });\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Rounded Corners shape type.\n */\nexport class RoundedCornersShape extends Shape {\n  /**\n   * RoundedCorners shape type: rp\n   */\n  public readonly type = ShapeType.ROUNDED_CORNERS;\n\n  public roundness: Property = new Property(this, PropertyType.NUMBER);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GroupShape instance\n   */\n  public fromJSON(json: Record<string, any>): RoundedCornersShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.roundness.fromJSON(json.r);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      r: this.roundness,\n    });\n  }\n}\n","import { ShapeType } from '../constants';\nimport { Shape } from './shape';\n\n/**\n * Merge shape type.\n */\nexport class MergeShape extends Shape {\n  /**\n   * RoundedCorners shape type: rp\n   */\n  public readonly type = ShapeType.MERGE;\n\n  public mergeMode = 1;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GroupShape instance\n   */\n  public fromJSON(json: Record<string, any>): MergeShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.mergeMode = json.mm;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      mm: this.mergeMode,\n    });\n  }\n}\n","import { LineJoinType, PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * OffsetPath shape.\n */\nexport class OffsetPathShape extends Shape {\n  /**\n   * OffsetPath shape type: 'op'\n   */\n  public readonly type = ShapeType.OFFSET_PATH;\n\n  /**\n   * Offset amount: 'a'\n   */\n  public amount: Property = new Property(this, PropertyType.AMOUNT);\n\n  /**\n   * Describes how path segments are joined together\n   * Line Join Type: 'lj'\n   */\n  public lineJoin: LineJoinType = LineJoinType.MITER;\n\n  /**\n   * Miter Limit: 'ml'\n   */\n  public miterLimit: Property = new Property(this, PropertyType.MITER_LIMIT);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       OffsetPathShape instance\n   */\n  public fromJSON(json: Record<string, any>): OffsetPathShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.miterLimit.fromJSON(json.ml);\n    this.amount.fromJSON(json.a);\n    this.lineJoin = json.lj;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      ml: this.miterLimit,\n      a: this.amount,\n      lj: this.lineJoin,\n    });\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * PuckerBloat shape.\n */\nexport class PuckerBloatShape extends Shape {\n  /**\n   * PuckerBloat shape type: 'pb'\n   */\n  public readonly type = ShapeType.PUCKER_BLOAT;\n\n  /**\n   * amount to bloat the shape by. -100 to 100\n   * field: 'a'\n   */\n  public amount: Property = new Property(this, PropertyType.AMOUNT);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       PuckerBloatShape instance\n   */\n  public fromJSON(json: Record<string, any>): PuckerBloatShape {\n    // Base shape\n    super.fromJSON(json);\n    this.amount.fromJSON(json.a);\n\n    // This shape\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      a: this.amount,\n    });\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * Twist shape.\n */\nexport class TwistShape extends Shape {\n  /**\n   * Twist shape type: 'tw'\n   */\n  public readonly type = ShapeType.TWIST;\n\n  /**\n   * Angle to twist by: 'a'. number, default: 0\n   */\n  public angle: Property = new Property(this, PropertyType.ANGLE);\n\n  /**\n   * Center of twist: 'c'. array, default: [0, 0]\n   */\n  public center: Property = new Property(this, PropertyType.CENTER);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TwistShape instance\n   */\n  public fromJSON(json: Record<string, any>): TwistShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.center.fromJSON(json.c);\n    this.angle.fromJSON(json.a);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      c: this.center,\n      a: this.angle,\n    });\n  }\n}\n","import { PropertyType, ShapeType } from '../constants';\nimport { Property } from '../properties';\nimport { Shape } from './shape';\n\n/**\n * ZigZag shape.\n */\nexport class ZigZagShape extends Shape {\n  /**\n   * ZigZag shape type: 'zz'\n   */\n  public readonly type = ShapeType.ZIG_ZAG;\n\n  /**\n   * radius to make it a smoother curve: 'r'\n   */\n  public radius: Property = new Property(this, PropertyType.RADIUS);\n\n  /**\n   * Distance between peaks and troughs: 's'\n   */\n  public distance: Property = new Property(this, PropertyType.DISTANCE);\n\n  /**\n   * Number of ridges: 'pt'\n   */\n  public numberOfRidges: Property = new Property(this, PropertyType.POINTS);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ZigZagShape instance\n   */\n  public fromJSON(json: Record<string, any>): ZigZagShape {\n    // Base shape\n    super.fromJSON(json);\n\n    // This shape\n    this.radius.fromJSON(json.r);\n    this.distance.fromJSON(json.s);\n    this.numberOfRidges.fromJSON(json.pt);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      r: this.radius,\n      s: this.distance,\n      pt: this.numberOfRidges,\n    });\n  }\n}\n","import { ShapeType } from '../constants';\nimport {\n  EllipseShape,\n  FillShape,\n  GradientFillShape,\n  GradientStrokeShape,\n  GroupShape,\n  MergeShape,\n  OffsetPathShape,\n  PathShape,\n  PuckerBloatShape,\n  RectangleShape,\n  RepeaterShape,\n  RoundedCornersShape,\n  StarShape,\n  StrokeShape,\n  TrimShape,\n  TwistShape,\n  ZigZagShape,\n} from '../shapes';\n\nexport const createShapeFromType = (type: ShapeType, parent: any) => {\n  if (type === ShapeType.PATH) {\n    return new PathShape(parent);\n  } else if (type === ShapeType.GROUP) {\n    return new GroupShape(parent);\n  } else if (type === ShapeType.FILL) {\n    return new FillShape(parent);\n  } else if (type === ShapeType.RECTANGLE) {\n    return new RectangleShape(parent);\n  } else if (type === ShapeType.ELLIPSE) {\n    return new EllipseShape(parent);\n  } else if (type === ShapeType.STROKE) {\n    return new StrokeShape(parent);\n  } else if (type === ShapeType.GRADIENT_FILL) {\n    return new GradientFillShape(parent);\n  } else if (type === ShapeType.GRADIENT_STROKE) {\n    return new GradientStrokeShape(parent);\n  } else if (type === ShapeType.TRIM) {\n    return new TrimShape(parent);\n  } else if (type === ShapeType.MERGE) {\n    return new MergeShape(parent);\n  } else if (type === ShapeType.STAR) {\n    return new StarShape(parent);\n  } else if (type === ShapeType.ROUNDED_CORNERS) {\n    return new RoundedCornersShape(parent);\n  } else if (type === ShapeType.REPEATER) {\n    return new RepeaterShape(parent);\n  } else if (type === ShapeType.PUCKER_BLOAT) {\n    return new PuckerBloatShape(parent);\n  } else if (type === ShapeType.OFFSET_PATH) {\n    return new OffsetPathShape(parent);\n  } else if (type === ShapeType.TWIST) {\n    return new TwistShape(parent);\n  } else if (type === ShapeType.ZIG_ZAG) {\n    return new ZigZagShape(parent);\n  }\n  throw new Error(`Invalid or unknown shape type: ${type}`);\n};\n","import { ShapeType } from '../constants';\nimport { Shape } from '../shapes';\nimport { createShapeFromType } from '../utils/shape';\n\nexport class Character {\n  public character = '';\n  public fontSize = 0;\n  public fontStyle = '';\n  public fontWeight = 0;\n  public data: Shape[] = [];\n  public fontFamily = '';\n\n  /**\n   * Creates and returns a new shape instance of given type.\n   *\n   * @param type  Shape type string.\n   */\n  public createShape(type: ShapeType): Shape {\n    return createShapeFromType(type, this);\n  }\n\n  /**\n   * Creates and returns a new shape instance from given JSON.\n   *\n   * @param json  JSON object.\n   */\n  public createShapeFromJSON(json: Record<string, any>): Shape {\n    try {\n      const shape = this.createShape(json.ty);\n\n      return shape.fromJSON(json);\n    } catch (e) {\n      throw new Error(`Unable to create shape from JSON: ${json.ty}`);\n    }\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Mask instance\n   */\n  public fromJSON(json: Record<string, any>): Character {\n    this.character = json.ch;\n    this.fontSize = json.size;\n    this.fontStyle = json.style;\n    this.fontWeight = json.w;\n    this.fontFamily = json.fFamily;\n    if ('data' in json && json.data.shapes) {\n      this.data = json.data.shapes.map((shapeJSON: Record<string, any>) => this.createShapeFromJSON(shapeJSON));\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const shapes = this.data.map(shape => shape.toJSON());\n    return {\n      ch: this.character,\n      size: this.fontSize,\n      style: this.fontStyle,\n      w: this.fontWeight,\n      data: { shapes: shapes.length ? shapes : undefined },\n      fFamily: this.fontFamily,\n    };\n  }\n}\n","/**\n * Text layer type.\n */\nexport class Font {\n  public fName = '';\n  public fFamily = '';\n  public fStyle = '';\n  public ascent = 0;\n\n  public fPath = '';\n  public fWeight = '';\n  public origin = -1;\n  public fClass = '';\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TextLayer instance\n   */\n  public fromJSON(json: Record<string, any>): Font {\n    this.fName = json.fName;\n    this.fFamily = json.fFamily;\n    this.fStyle = json.fStyle;\n    this.ascent = json.ascent;\n    this.fPath = json.fPath;\n    this.fWeight = json.fWeight;\n    this.origin = json.origin;\n    this.fClass = json.fClass;\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      fName: this.fName,\n      fFamily: this.fFamily,\n      fStyle: this.fStyle,\n      ascent: this.ascent,\n      ...(!(this.fPath === '') && { fPath: this.fPath }),\n      ...(!(this.fWeight === '') && { fWeight: this.fWeight }),\n      ...(!(this.origin >= 0) && { origin: this.origin }),\n      ...(!(this.fClass === '') && { fClass: this.fClass }),\n    };\n  }\n}\n","/**\n * Text layer type.\n */\nimport { Font } from './font';\n\nexport class FontList {\n  public list: Font[] = [];\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TextLayer instance\n   */\n\n  public fromJSON(json: Record<string, any>): FontList {\n    this.list = json.list.map((fontJSON: Record<string, any>) => new Font().fromJSON(fontJSON));\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      list: this.list,\n    };\n  }\n}\n","import { PropertyType } from '../constants';\nimport { EffectValueType } from '../constants';\nimport { Property } from '../properties';\n\nexport class EffectValue {\n  public name = '';\n  public matchName?: string;\n  public index = 0;\n  public value?: Property | number;\n  public type: EffectValueType;\n\n  public constructor(type: EffectValueType) {\n    this.type = type;\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Mask instance\n   */\n  public fromJSON(json: Record<string, any>): EffectValue {\n    this.name = json.nm;\n    this.matchName = json.mn;\n    this.index = json.ix;\n\n    if (typeof json.v === 'object') {\n      this.value = new Property(this, PropertyType.EFFECT_VALUE).fromJSON(json.v);\n    } else if (typeof json.v === 'number') {\n      this.value = json.v;\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      ty: this.type,\n      nm: this.name,\n      mn: this.matchName,\n      ix: this.index,\n      v: this.value,\n    };\n  }\n}\n","import { EffectType } from '../constants';\nimport { EffectValue } from './effect-value';\n\nexport class Effect {\n  public name = '';\n  public matchName?: string;\n  public numberOfProperties?: number;\n  public index = 0;\n  public enabled = true;\n  public type: EffectType;\n  public values: EffectValue[] = [];\n\n  public constructor(type: EffectType = EffectType.NONE) {\n    this.type = type;\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Mask instance\n   */\n  public fromJSON(json: Record<string, any>): Effect {\n    this.type = json.ty;\n    this.name = json.nm;\n    this.matchName = json.mn;\n    this.numberOfProperties = json.np;\n    this.index = json.ix;\n    this.enabled = json.en ?? true;\n    this.values = json.ef.map((valueJSON: Record<string, any>) => new EffectValue(valueJSON.ty).fromJSON(valueJSON));\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const values = this.values.map(value => value.toJSON());\n    return {\n      ty: this.type,\n      nm: this.name,\n      np: this.numberOfProperties,\n      mn: this.matchName,\n      ix: this.index,\n      ef: values,\n      en: this.enabled ? 1 : this.enabled,\n    };\n  }\n}\n","import { MaskMode, PropertyType } from '../constants';\nimport { Property } from '../properties';\n\n/**\n * Mask.\n */\nexport class Mask {\n  public isInverted = false;\n  public name = '';\n  public opacity: Property = new Property(this, PropertyType.OPACITY);\n  public points: Property = new Property(this, PropertyType.POINTS);\n  public mode: MaskMode = MaskMode.Add;\n  public expansion: Property = new Property(this, PropertyType.EXPANSION);\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Mask instance\n   */\n  public fromJSON(json: Record<string, any>): Mask {\n    this.isInverted = Boolean(json.inv);\n    this.mode = json.mode;\n    this.name = json.nm;\n    this.points.fromJSON(json.pt);\n    this.opacity.fromJSON(json.o);\n    this.expansion.fromJSON(json.x);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      inv: this.isInverted,\n      mode: this.mode,\n      nm: this.name,\n      o: this.opacity,\n      pt: this.points,\n      x: this.expansion,\n    };\n  }\n}\n","import { BlendMode, LayerType, MatteMode, PropertyType } from '../constants';\nimport { Effect } from '../effects';\nimport { Mask } from '../masks';\nimport { Property } from '../properties/property';\nimport { Transform } from '../properties/transform';\nimport { KeyFrame } from '../timeline/key-frame';\nimport { useRegistry } from '../utils/use-registry';\n\n/**\n * Layer base class.\n */\nexport abstract class Layer {\n  public abstract readonly type: LayerType;\n\n  public autoOrient = false;\n  public blendMode: BlendMode = BlendMode.NORMAL;\n  public classNames: string[] = [];\n  public id = '';\n  public index?: number;\n  public inPoint = 0;\n  public is3D = false;\n  public name = '';\n  public outPoint = 0;\n  public startTime = 0;\n  public timeStretch = 1;\n  public matteMode?: MatteMode;\n  public matteTarget?: number;\n  public isHidden?: boolean;\n  public matchName?: string;\n  public masks: Mask[] = [];\n  public effects: Effect[] = [];\n\n  // Transforms\n  public transform: Transform = new Transform();\n\n  /**\n   * Parent instance.\n   */\n  public parent?: any;\n\n  /**\n   * Constructor.\n   *\n   * @param parent   Parent instance.\n   */\n  constructor(parent: any) {\n    this.parent = parent;\n  }\n\n  /**\n   * Returns all the colors used in the layer.\n   *\n   * @returns Array of colors.\n   */\n  public get colors(): string[] {\n    const colors: Set<string> = new Set();\n    const registry = useRegistry();\n\n    [...registry.keys()]\n      // Filter this layer's color properties\n      .filter((p: Property) => registry.get(p) === this && p.type === PropertyType.COLOR)\n      .forEach((cp: Property) => {\n        cp.values.forEach((v: KeyFrame) => {\n          colors.add(JSON.stringify(v.value));\n        });\n      });\n\n    return Array.from(colors).map(c => JSON.parse(c));\n  }\n\n  /**\n   * Returns true if there are masks present in the layer.\n   * @returns true if masks present\n   */\n  public get hasMask(): boolean {\n    return this.masks.length > 0;\n  }\n\n  /**\n   * Returns the total number of frames in the animation.\n   *\n   * @returns Number of frames.\n   */\n  public get totalFrames(): number {\n    return this.outPoint - this.inPoint;\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ShapeLayer instance\n   */\n  public fromJSON(json: Record<string, any>): Layer {\n    // Base layer props\n    this.autoOrient = json.ao === 1;\n    this.blendMode = json.bm;\n    this.id = json.ln;\n    this.index = json.ind;\n    this.inPoint = json.ip;\n    this.is3D = json.ddd;\n    this.name = json.nm;\n    this.outPoint = json.op;\n    this.parent = json.parent;\n    this.startTime = json.st;\n    this.timeStretch = json.sr;\n\n    // Split classnames into array\n    this.classNames = 'cl' in json ? json.cl.split(' ') : [];\n\n    // Transforms\n    this.transform.fromJSON(json.ks);\n\n    if ('tt' in json) {\n      this.matteMode = json.tt;\n    }\n\n    if ('td' in json) {\n      this.matteTarget = json.td;\n    }\n\n    if ('hd' in json) {\n      this.isHidden = json.hd;\n    }\n\n    if ('mn' in json) {\n      this.matchName = json.mn;\n    }\n\n    if ('masksProperties' in json) {\n      this.masks = json.masksProperties.map((maskJson: Record<string, any>) => new Mask().fromJSON(maskJson));\n    }\n\n    if ('ef' in json) {\n      this.effects = json.ef.map((effectJson: Record<string, any>) => new Effect().fromJSON(effectJson));\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const masks = this.hasMask ? this.masks.map(mask => mask.toJSON()) : undefined;\n    const effects = this.effects.length ? this.effects.map(effect => effect.toJSON()) : undefined;\n    return {\n      ddd: this.is3D ? 1 : 0,\n      ind: this.index,\n      ty: this.type,\n      nm: this.name,\n      mn: this.matchName,\n      tt: this.matteMode,\n      td: this.matteTarget,\n      cl: this.classNames.length ? this.classNames.join(' ') : undefined,\n      ln: this.id,\n      parent: this.parent?.index,\n      hd: this.isHidden !== undefined ? Number(this.isHidden) : undefined,\n      sr: this.timeStretch,\n      ks: this.transform.toJSON(),\n      ao: this.autoOrient ? 1 : 0,\n      hasMask: this.hasMask || undefined,\n      masksProperties: masks,\n      ef: effects,\n      ip: this.inPoint,\n      op: this.outPoint,\n      st: this.startTime,\n      bm: this.blendMode,\n    };\n  }\n}\n","import { LayerType } from '../constants';\nimport { Layer } from './layer';\n\n/**\n * Group layer type.\n */\nexport class GroupLayer extends Layer {\n  public readonly type = LayerType.GROUP;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       GroupLayer instance\n   */\n  public fromJSON(json: Record<string, any>): GroupLayer {\n    super.fromJSON(json);\n\n    return this;\n  }\n}\n","import { LayerType } from '../constants';\nimport { Layer } from './layer';\n\n/**\n * Image layer type.\n */\nexport class ImageLayer extends Layer {\n  public readonly type = LayerType.IMAGE;\n\n  public refId!: string;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ImageLayer instance\n   */\n  public fromJSON(json: Record<string, any>): ImageLayer {\n    super.fromJSON(json);\n    // This layer props\n    this.refId = json.refId;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      refId: this.refId,\n    });\n  }\n}\n","import { LayerType } from '../constants';\nimport { Layer } from './layer';\n\n/**\n * Precomposition layer type.\n */\nexport class PrecompositionLayer extends Layer {\n  public readonly type = LayerType.PRECOMPOSITION;\n\n  public height = 512;\n\n  public refId?: string;\n\n  public timeRemap: any;\n\n  public width = 512;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       PrecompositionLayer instance\n   */\n  public fromJSON(json: Record<string, any>): PrecompositionLayer {\n    super.fromJSON(json);\n\n    // This layer props\n    this.height = json.h;\n    this.refId = json.refId;\n    this.width = json.w;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      h: this.height,\n      refId: this.refId,\n      w: this.width,\n    });\n  }\n}\n","import { LayerType, ShapeType } from '../constants';\nimport { Shape } from '../shapes';\nimport { createShapeFromType } from '../utils/shape';\nimport { Layer } from './layer';\n\n/**\n * Shape layer type.\n */\nexport class ShapeLayer extends Layer {\n  // Shape layer type = 4\n  public readonly type = LayerType.SHAPE;\n\n  public shapes: Shape[] = [];\n\n  /**\n   * Creates and returns a new shape instance of given type.\n   *\n   * @param type  Shape type string.\n   */\n  public createShape(type: ShapeType): Shape {\n    return createShapeFromType(type, this);\n  }\n\n  /**\n   * Adds a shape to the Layer\n   */\n  public addShape(shape: ShapeType | Shape): Shape {\n    if (!(shape instanceof Shape)) shape = this.createShape(shape);\n\n    this.shapes.push(shape);\n\n    return shape;\n  }\n\n  /**\n   * Creates and returns a new shape instance from given JSON.\n   *\n   * @param json  JSON object.\n   */\n  public createShapeFromJSON(json: Record<string, any>): Shape {\n    try {\n      const shape = this.createShape(json.ty);\n\n      return shape.fromJSON(json);\n    } catch (e) {\n      throw new Error(`Unable to create shape from JSON: ${json.ty}`);\n    }\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       ShapeLayer instance\n   */\n  public fromJSON(json: Record<string, any>): ShapeLayer {\n    super.fromJSON(json);\n\n    // This layer props\n    this.shapes = json.shapes.map((jShape: Record<string, any>) => this.createShapeFromJSON(jShape)).filter(Boolean);\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      shapes: this.shapes.map(shape => shape.toJSON()),\n    });\n  }\n}\n","import { LayerType } from '../constants';\nimport { Layer } from './layer';\n\n/**\n * Solid layer type.\n */\nexport class SolidLayer extends Layer {\n  public readonly type = LayerType.SOLID;\n\n  public solidColor = '#000000';\n  public solidHeight = 1;\n  public solidWidth = 1;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       SolidLayer instance\n   */\n  public fromJSON(json: Record<string, any>): SolidLayer {\n    super.fromJSON(json);\n\n    // This layer props\n    this.solidColor = json.sc;\n    this.solidHeight = json.sh;\n    this.solidWidth = json.sw;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      sc: this.solidColor,\n      sh: this.solidHeight,\n      sw: this.solidWidth,\n    });\n  }\n}\n","import { PropertyType, TextBased, TextShape } from '../constants';\nimport { Property } from '../properties';\n\nexport class TextSelector {\n  public startTime = 0;\n  public randomize = false;\n  public textShape: TextShape = TextShape.SQUARE;\n  public basedOn: TextBased = TextBased.CHARACTERS;\n  public maxEase: Property = new Property(this, PropertyType.MAX_EASE);\n  public minEase: Property = new Property(this, PropertyType.MIN_EASE);\n  public maxAmount: Property = new Property(this, PropertyType.MAX_AMOUNT);\n  public rangeUnits?: number;\n  public offset?: Property;\n  public expressionSelector?: Property;\n  public start?: Property;\n  public end?: Property;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TextSelectorProperty instance\n   */\n  public fromJSON(json: Record<string, any>): TextSelector {\n    this.startTime = json.t;\n    this.randomize = json.r === 1;\n    this.rangeUnits = json.rn;\n    this.textShape = json.sh;\n    this.basedOn = json.b;\n\n    if ('a' in json) {\n      this.maxAmount.fromJSON(json.a);\n    }\n    if ('e' in json) {\n      this.end = new Property(this, PropertyType.END).fromJSON(json.e);\n    }\n    if ('xe' in json) {\n      this.maxEase = new Property(this, PropertyType.MAX_EASE).fromJSON(json.xe);\n    }\n    if ('ne' in json) {\n      this.minEase = new Property(this, PropertyType.MIN_EASE).fromJSON(json.ne);\n    }\n    if ('o' in json) {\n      this.offset = new Property(this, PropertyType.OFFSET).fromJSON(json.o);\n    }\n    if ('sm' in json) {\n      this.expressionSelector = new Property(this, PropertyType.EXPRESSION_SELECTOR).fromJSON(json.sm);\n    }\n    if ('s' in json) {\n      this.start = new Property(this, PropertyType.START).fromJSON(json.s);\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      t: this.startTime,\n      xe: this.maxEase,\n      ne: this.minEase,\n      a: this.maxAmount,\n      b: this.basedOn,\n      rn: this.rangeUnits,\n      sh: this.textShape,\n      o: this.offset,\n      r: this.randomize ? 1 : 0,\n      sm: this.expressionSelector,\n      s: this.start,\n      e: this.end,\n    };\n  }\n}\n","import { PropertyType } from '../constants';\nimport { Property } from '../properties';\n\nexport class TextTransform {\n  public anchor?: Property;\n  public opacity?: Property;\n  public position?: Property;\n  public rotation?: Property;\n  public scale?: Property;\n  public skew?: Property;\n  public skewAxis?: Property;\n  public rotationX?: Property;\n  public rotationY?: Property;\n  public strokeWidth?: Property;\n  public strokeColor?: Property;\n  public fillColor?: Property;\n  public fillSaturation?: Property;\n  public fillHue?: Property;\n  public fillBrightness?: Property;\n  public tracking?: Property;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Transform instance\n   */\n  public fromJSON(json: Record<string, any>): this {\n    if ('a' in json) {\n      this.anchor = new Property(this, PropertyType.ANCHOR).fromJSON(json.a);\n    }\n    if ('p' in json) {\n      this.position = new Property(this, PropertyType.POSITION).fromJSON(json.p);\n    }\n    if ('s' in json) {\n      this.scale = new Property(this, PropertyType.SCALE).fromJSON(json.s);\n    }\n    if ('r' in json) {\n      this.rotation = new Property(this, PropertyType.ROTATION).fromJSON(json.r);\n    }\n    if ('sk' in json) {\n      this.skew = new Property(this, PropertyType.SKEW).fromJSON(json.sk);\n    }\n    if ('sa' in json) {\n      this.skewAxis = new Property(this, PropertyType.SKEW_AXIS).fromJSON(json.sa);\n    }\n    if ('o' in json) {\n      this.opacity = new Property(this, PropertyType.OPACITY).fromJSON(json.o);\n    }\n    if ('rx' in json) {\n      this.rotationX = new Property(this, PropertyType.ROTATION_X).fromJSON(json.rx);\n    }\n    if ('ry' in json) {\n      this.rotationY = new Property(this, PropertyType.ROTATION_Y).fromJSON(json.ry);\n    }\n    if ('sw' in json) {\n      this.strokeWidth = new Property(this, PropertyType.STROKE_WIDTH).fromJSON(json.sw);\n    }\n    if ('sc' in json) {\n      this.strokeColor = new Property(this, PropertyType.COLOR).fromJSON(json.sc);\n    }\n    if ('fc' in json) {\n      this.fillColor = new Property(this, PropertyType.COLOR).fromJSON(json.fc);\n    }\n    if ('fs' in json) {\n      this.fillSaturation = new Property(this, PropertyType.SATURATION).fromJSON(json.fs);\n    }\n    if ('fh' in json) {\n      this.fillHue = new Property(this, PropertyType.HUE).fromJSON(json.fh);\n    }\n    if ('fb' in json) {\n      this.fillBrightness = new Property(this, PropertyType.BRIGHTNESS).fromJSON(json.fb);\n    }\n    if ('t' in json) {\n      this.tracking = new Property(this, PropertyType.TEXT_TRACKING).fromJSON(json.t);\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      a: this.anchor,\n      o: this.opacity,\n      p: this.position,\n      r: this.rotation,\n      s: this.scale,\n      sk: this.skew,\n      sa: this.skewAxis,\n      rx: this.rotationX,\n      ry: this.rotationY,\n      sw: this.strokeWidth,\n      sc: this.strokeColor,\n      fc: this.fillColor,\n      fs: this.fillSaturation,\n      fh: this.fillHue,\n      fb: this.fillBrightness,\n      t: this.tracking,\n    };\n  }\n}\n","import { TextSelector } from './text-selector';\nimport { TextTransform } from './text-transform';\n\nexport class TextAnimator {\n  public name = '';\n  public transform: TextTransform = new TextTransform();\n  public selector: TextSelector = new TextSelector();\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Transform instance\n   */\n  public fromJSON(json: Record<string, any>): TextAnimator {\n    this.transform.fromJSON(json.a);\n    this.selector.fromJSON(json.s);\n    this.name = json.nm;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      nm: this.name,\n      s: this.selector,\n      a: this.transform,\n    };\n  }\n}\n","import { PropertyType, TextGrouping } from '../constants';\nimport { Property } from '../properties';\n\nexport class TextOptions {\n  public alignment = new Property(this, PropertyType.TEXT_ALIGNMENT);\n  public grouping: TextGrouping = TextGrouping.CHARACTERS;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TextOptions instance\n   */\n  public fromJSON(json: Record<string, any>): TextOptions {\n    this.alignment.fromJSON(json.a);\n    this.grouping = json.g;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      a: this.alignment,\n      g: this.grouping,\n    };\n  }\n}\n","import { PropertyType } from '../constants';\nimport { Property } from '../properties';\nimport { TextAnimator } from './text-animator';\nimport { TextOptions } from './text-options';\n\nexport class TextData {\n  public textDocument: Property = new Property(this, PropertyType.TEXT_DATA);\n  public textOptions: TextOptions = new TextOptions();\n  public maskedPath: any;\n  public textAnimators: TextAnimator[] = [];\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TextLayer instance\n   */\n  public fromJSON(json: Record<string, any>): TextData {\n    this.textDocument.fromJSON(json.d);\n    this.textOptions.fromJSON(json.m);\n    this.maskedPath = json.p;\n    if ('a' in json && Array.isArray(json.a)) {\n      this.textAnimators = json.a.map((animatorJson: Record<string, any>) => this.createTextAnimator(animatorJson));\n    }\n\n    return this;\n  }\n\n  public createTextAnimator(json: Record<string, any>) {\n    return new TextAnimator().fromJSON(json);\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      a: this.textAnimators.map(animator => animator.toJSON()),\n      d: this.textDocument,\n      m: this.textOptions,\n      p: this.maskedPath,\n    };\n  }\n}\n","import { LayerType } from '../constants';\nimport { TextData } from '../text';\nimport { Layer } from './layer';\n\n/**\n * Text layer type.\n */\nexport class TextLayer extends Layer {\n  public readonly type = LayerType.TEXT;\n\n  public textData?: TextData;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       TextLayer instance\n   */\n  public fromJSON(json: Record<string, any>): TextLayer {\n    // Base layer props\n    super.fromJSON(json);\n\n    // This layer props\n    if ('t' in json) {\n      this.textData = new TextData();\n      this.textData.fromJSON(json.t);\n    }\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    const json = super.toJSON();\n\n    return Object.assign(json, {\n      t: this.textData,\n    });\n  }\n}\n","/**\n * Marker.\n */\nexport class Marker {\n  public comment = '';\n  public duration = 0;\n  public time = 0;\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Marker instance\n   */\n  public fromJSON(json: Record<string, any>): Marker {\n    this.comment = json.cm;\n    this.duration = json.dr;\n    this.time = json.tm;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      cm: this.comment,\n      dr: this.duration,\n      tm: this.time,\n    };\n  }\n}\n","import { Color } from '../values/color';\n\nexport function rgbaToHex(rgba: number[]) {\n  let r = (+rgba[0]).toString(16),\n    g = (+rgba[1]).toString(16),\n    b = (+rgba[2]).toString(16),\n    a = Math.round(+rgba[3] * 255).toString(16);\n\n  if (r.length == 1) r = '0' + r;\n  if (g.length == 1) g = '0' + g;\n  if (b.length == 1) b = '0' + b;\n  if (a.length == 1) a = '0' + a;\n\n  return '#' + r + g + b + a;\n}\nexport function hexToRgba(hex: string, alpha: number | null): number[] {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return [r / 255, g / 255, b / 255, alpha];\n  }\n\n  return [r / 255, g / 255, b / 255];\n}\n\nexport function websafeColors(colors: Color[]): Color[] {\n  colors.forEach((color: Color) => {\n    color.websafeColors();\n  });\n  return colors;\n}\n","/**\n * Animation metadata information.\n */\nexport class Meta {\n  /**\n   * Author name.\n   */\n  public author?: string;\n\n  /**\n   * Keywords.\n   */\n  public keywords: string[] = [];\n\n  /**\n   * Generator.\n   */\n  public generator = process.env.GENERATOR;\n\n  /**\n   * Description.\n   */\n  public description?: string;\n\n  /**\n   * Theme color.\n   */\n  public themeColor?: string;\n\n  /**\n   * Parent instance.\n   *\n   * @protected\n   */\n  protected parent: any;\n\n  /**\n   * Constructor.\n   *\n   * @param parent   Parent instance.\n   */\n  constructor(parent: any) {\n    this.parent = parent;\n  }\n\n  /**\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Meta instance\n   */\n  public fromJSON(json: Record<string, any>): Meta {\n    this.author = json.a;\n    this.keywords = 'k' in json ? json.k.split(',').map((w: string) => w.trim()) : [json.k];\n    this.generator = json.g;\n    this.description = json.d;\n    this.themeColor = json.tc;\n\n    return this;\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns JSON object\n   */\n  public toJSON(): Record<string, any> {\n    return {\n      a: this.author,\n      k: this.keywords.length ? this.keywords : undefined,\n      g: this.generator,\n      d: this.description,\n      tc: this.themeColor,\n    };\n  }\n}\n","import fetch from 'cross-fetch';\n\nimport { Asset, ImageAsset, PrecompositionAsset } from '../assets';\nimport { AssetType, LayerType, PropertyType } from '../constants';\nimport { Character, FontList } from '../fonts';\nimport { GroupLayer, ImageLayer, Layer, PrecompositionLayer, ShapeLayer, SolidLayer, TextLayer } from '../layers';\nimport { Marker } from '../markers';\nimport { Property } from '../properties';\nimport { GroupShape } from '../shapes/group-shape';\nimport { Shape } from '../shapes/shape';\nimport { KeyFrame } from '../timeline';\nimport { rgbaToHex } from '../utils/color-spaces';\nimport { useRegistry } from '../utils/use-registry';\nimport { TextDocument } from '../values';\nimport { Color } from '../values/color';\nimport { Meta } from './meta';\n\ninterface parentLocatorInterface {\n  [key: string]: string;\n}\n\n/**\n * Animation contains all the information about the Lottie animation.\n */\nexport class Animation {\n  public assets: Asset[] = [];\n  public frameRate = 60;\n  public height = 0;\n  public inPoint = 0;\n  public is3D = false;\n  public layers: Layer[] = [];\n  public markers: Marker[] = [];\n  public meta: Meta = new Meta(this);\n  public name = '';\n  public outPoint = 0;\n  public version = ``;\n  public width = 0;\n  public fonts: FontList = new FontList();\n  public characters: Character[] = [];\n\n  /**\n   * Create a class instance from the URL to the Lottie JSON.\n   *\n   * @param url     URL string\n   * @returns       Animation instance\n   */\n  public static async fromURL(url: string): Promise<Animation> {\n    if (typeof url !== 'string') {\n      throw new Error(`The url value must be a string`);\n    }\n\n    let json;\n\n    try {\n      // Try construct an absolute URL from the src URL\n      const srcUrl: URL = new URL(url);\n\n      // Fetch the JSON file from the URL\n      const result = await fetch(srcUrl.toString());\n      json = await result.json();\n    } catch (err) {\n      throw new Error(`An error occurred while trying to load the Lottie file from URL`);\n    }\n\n    // Create a new animation instance and import JSON\n    const anim = new Animation();\n\n    return anim.fromJSON(json);\n  }\n\n  /**\n   * Returns whether the given object looks like a valid Lottie JSON structure.\n   *\n   * This method checks for the presense of the mandatory fields 'v', 'ip',\n   * 'op', 'layers', 'fr', 'w' and 'h' in the object.\n   *\n   * @param json    Object\n   * @returns       Boolean true if it is a valid Lottie\n   */\n  public static isLottie(json: Record<string, any>): boolean {\n    const mandatory = ['v', 'ip', 'op', 'layers', 'fr', 'w', 'h'];\n\n    return mandatory.every(field => Object.prototype.hasOwnProperty.call(json, field));\n  }\n\n  /*\n   * Returns all the colors used in the animation.\n   *\n   * @returns Array of colors.\n   */\n  public get colors(): Color[] {\n    const colors: Set<string> = new Set();\n\n    [...useRegistry().keys()]\n      // Filter color properties\n      .filter((p: Property) => p.type === PropertyType.COLOR)\n      .forEach((cp: Property) => {\n        cp.values.forEach((v: KeyFrame) => {\n          colors.add(JSON.stringify(v.value));\n        });\n      });\n\n    return Array.from(colors).map(c => Color.fromJSON(JSON.parse(c)));\n  }\n\n  /*\n   * Returns all the colors used in the animation.\n   *\n   * @returns Array of colors.\n   */\n\n  public get colorsVerbose(): Record<string, any> {\n    const colors: parentLocatorInterface = {};\n\n    [...useRegistry().keys()]\n      // Filter color properties\n      .filter((p: Property) => p.type === PropertyType.COLOR)\n      .forEach((cp: Property, index: number) => {\n        const parent = cp.getParent();\n        const pathString = this.parentPath(parent);\n\n        const pathCopy = pathString.slice();\n\n        cp.values.forEach((v: KeyFrame) => {\n          pathCopy.unshift('Frame ' + v.frame);\n          pathCopy.unshift(index.toString());\n\n          const colorParts = v.value as [number, number, number, number];\n\n          colors[pathCopy.join('.')] = rgbaToHex([\n            Math.round(colorParts[0] * 255),\n            Math.round(colorParts[1] * 255),\n            Math.round(colorParts[2] * 255),\n            colorParts[3],\n          ]);\n        });\n      });\n\n    return colors;\n  }\n\n  /*\n   * return all the text layers with layer name\n   */\n\n  public get textLayers(): Record<string, any> {\n    const textLayers: parentLocatorInterface = {};\n    const layers = this.getLayersByType(LayerType.TEXT) as TextLayer[];\n    layers.forEach((layer, index) => {\n      const textDocument = layer.textData?.textDocument.values[0];\n      let layerText = '';\n      if (textDocument !== undefined) {\n        layerText = (textDocument.value as TextDocument).text;\n      }\n      textLayers[index + '.' + layer.name] = layerText;\n    });\n    return textLayers;\n  }\n\n  /*\n   * returns the names of all prents given a shape\n   */\n\n  public parentPath(shape: any, paths: string[] = []): string[] {\n    if (shape.parent === undefined) {\n      // stop recursion\n      paths.push(shape.name);\n      return paths;\n    }\n    paths.push(shape.name);\n    return this.parentPath(shape.parent, paths);\n  }\n\n  /**\n   * Returns the running time of the animation in seconds.\n   *\n   * @returns Number of seconds.\n   */\n  public get duration(): number {\n    return this.totalFrames / this.frameRate;\n  }\n\n  /**\n   * Returns the size of the Lottie JSON in bytes.\n   *\n   * @returns Number of bytes.\n   */\n  public get fileSize(): number {\n    return new TextEncoder().encode(JSON.stringify(this)).length;\n  }\n\n  /**\n   * Returns the total number of frames in the animation.\n   *\n   * @returns Number of frames.\n   */\n  public get totalFrames(): number {\n    return this.outPoint - this.inPoint;\n  }\n\n  /**\n   * Creates and returns a new asset of the given type.\n   *\n   * @param type    Asset type string.\n   */\n  public createAsset(type: AssetType): Asset {\n    if (type === AssetType.PRECOMPOSITION) {\n      return new PrecompositionAsset(this);\n    } else if (type === AssetType.IMAGE) {\n      return new ImageAsset(this);\n    }\n\n    throw new Error(`Invalid or unknown asset type ${type}`);\n  }\n\n  /**\n   * Creates and returns a new asset from JSON.\n   *\n   * @param json    JSON object.\n   */\n  public createAssetFromJSON(json: Record<string, any>): Asset {\n    try {\n      const asset = this.createAsset('layers' in json ? AssetType.PRECOMPOSITION : AssetType.IMAGE);\n\n      return asset.fromJSON(json);\n    } catch {\n      throw new Error(`Unable to create asset from JSON`);\n    }\n  }\n\n  /**\n   * Creates and returns a new layer of the given type.\n   *\n   * @param type    Layer type string.\n   */\n  public createLayer(type: LayerType): Layer {\n    if (type === LayerType.PRECOMPOSITION) {\n      return new PrecompositionLayer(this);\n    } else if (type === LayerType.SHAPE) {\n      return new ShapeLayer(this);\n    } else if (type === LayerType.GROUP) {\n      return new GroupLayer(this);\n    } else if (type === LayerType.SOLID) {\n      return new SolidLayer(this);\n    } else if (type === LayerType.IMAGE) {\n      return new ImageLayer(this);\n    } else if (type === LayerType.TEXT) {\n      return new TextLayer(this);\n    }\n\n    throw new Error(`Invalid or unknown layer type: ${type}`);\n  }\n\n  /**\n   * Creates and returns a new layer from JSON.\n   *\n   * @param json    JSON object.\n   */\n  public createLayerFromJSON(json: Record<string, any>): Layer {\n    try {\n      const layer = this.createLayer(json.ty);\n\n      return layer.fromJSON(json);\n    } catch (e) {\n      console.log(e);\n      throw new Error(`Unable to create layer type from JSON: ${json.ty}`);\n    }\n  }\n\n  /**\n   * Creates layers from json layers array\n   *\n   * @param jsonLayers    array containing JSON objects representing layers\n   */\n  public createLayersFromJSONArray(jsonLayers: Record<string, any>[]): Layer[] {\n    const layerRegistry = new Map<number, Layer>();\n    const layerToParent: [Layer, number][] = [];\n    const layers: Layer[] = [];\n\n    jsonLayers.forEach((jLayer: Record<string, any>) => {\n      const layer = this.createLayerFromJSON(jLayer);\n      if (layer) {\n        if (jLayer.parent !== undefined) {\n          layerToParent.push([layer, jLayer.parent]);\n        }\n        if (layer.index !== undefined) {\n          layerRegistry.set(layer.index, layer);\n        }\n        layers.push(layer);\n      }\n    });\n\n    layerToParent.forEach(([layer, parentId]) => {\n      layer.parent = layerRegistry.get(parentId);\n    });\n\n    return layers;\n  }\n\n  /**\n   * Creates and returns a new marker.\n   */\n  public createMarker(): Marker {\n    return new Marker();\n  }\n\n  /**\n   * Creates and returns a new marker from JSON.\n   *\n   * @param json    JSON object.\n   */\n  public createMarkerFromJSON(json: Record<string, any>): Marker {\n    try {\n      const marker = this.createMarker();\n\n      return marker.fromJSON(json);\n    } catch (e) {\n      console.log(e);\n      throw new Error(`Unable to create marker from JSON`);\n    }\n  }\n\n  /*\n   * Convert the Lottie JSON object to class instance.\n   *\n   * @param json    JSON object\n   * @returns       Animation instance\n   */\n  public fromJSON(json: Record<string, any>): Animation {\n    if (Animation.isLottie(json) === false) {\n      throw new Error(`The given object is not a valid Lottie JSON structure`);\n    }\n\n    this.frameRate = json.fr;\n    this.height = json.h;\n    this.inPoint = json.ip;\n    this.is3D = json.ddd;\n    this.name = json.nm;\n    this.outPoint = json.op;\n    this.version = json.v;\n    this.width = json.w;\n\n    if ('assets' in json) {\n      this.assets = json.assets.map((jAsset: Record<string, any>) => this.createAssetFromJSON(jAsset)).filter(Boolean);\n    }\n\n    this.layers = this.createLayersFromJSONArray(json.layers);\n\n    if ('markers' in json) {\n      this.markers = json.markers\n        .map((jMarker: Record<string, any>) => this.createMarkerFromJSON(jMarker))\n        .filter(Boolean);\n    }\n\n    if ('meta' in json) {\n      this.meta.fromJSON(json.meta);\n    }\n\n    if ('fonts' in json) {\n      this.fonts.fromJSON(json.fonts);\n    }\n\n    if ('chars' in json) {\n      this.characters = json.chars.map((charJSON: Record<string, any>) => new Character().fromJSON(charJSON));\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the layer with the given ID.\n   *\n   * @param id    Layer ID string.\n   * @returns     Layer instance.\n   */\n  public getLayerById(id: string): Layer | undefined {\n    // Validate argument type\n    if (typeof id !== 'string') {\n      throw new Error(`ID value must be a string`);\n    }\n\n    return this.layers.find((layer: Layer) => layer.id === id);\n  }\n\n  public getShapeById(id: string): Shape | null {\n    let queried_shape = null;\n    // Validate argument type\n    if (typeof id !== 'string') {\n      throw new Error(`ID value must be a string`);\n    }\n    this.layers.forEach(layer => {\n      if (layer instanceof ShapeLayer) {\n        layer.shapes.forEach(shape => {\n          if (shape.id === id) {\n            queried_shape = shape;\n            return;\n          }\n        });\n      }\n    });\n    return queried_shape;\n  }\n\n  public getShapesByClassName(className: string): Shape[] {\n    const shapes: Shape[] = [];\n    // Validate argument type\n    if (typeof className !== 'string') {\n      throw new Error(`ID value must be a string`);\n    }\n    this.layers.forEach(layer => {\n      if (layer instanceof ShapeLayer) {\n        layer.shapes.forEach(shape => {\n          if (shape.classNames?.includes(className)) {\n            shapes.push(shape);\n          }\n          if (shape instanceof GroupShape) {\n            // group shapes will have a shapes array that contains all of the shapes that are grouped in\n            const groupedShapes = shape.shapes;\n            groupedShapes.forEach(groupedShape => {\n              if (groupedShape.classNames?.includes(className)) {\n                shapes.push(shape);\n              }\n            });\n          }\n        });\n      }\n    });\n    return shapes;\n  }\n\n  /**\n   * Returns the layers with the given class.\n   *\n   * @param className    Layer class name string.\n   * @returns            Array of layer instances.\n   */\n  public getLayersByClassName(className: string): Layer[] {\n    // Validate argument type\n    if (typeof className !== 'string') {\n      throw new Error(`Class name value must be a string`);\n    }\n\n    return this.layers.filter((layer: Layer) => layer.classNames.includes(className));\n  }\n\n  /**\n   * Returns the layers of the given type.\n   *\n   * @param type    LayerType value.\n   * @returns       Layer instance.\n   */\n  public getLayersByType(type: LayerType): Layer[] {\n    // Validate argument type\n    if (type in LayerType === false) {\n      throw new Error(`Type value must be a valid LayerType value`);\n    }\n\n    return this.layers.filter((layer: Layer) => layer.type === type);\n  }\n\n  /**\n   * Convert the class instance to Lottie JSON object.\n   *\n   * Called by Javascript when serializing object with JSON.stringify()\n   *\n   * @returns       JSON object\n   */\n  public toJSON(key?: string): Record<string, any> | undefined {\n    if (key) {\n      return undefined;\n    }\n    const chars = this.characters.map(char => char.toJSON());\n\n    return {\n      ...(this.assets.length > 0 && { assets: this.assets }),\n      ddd: this.is3D ? 1 : 0,\n      fr: this.frameRate,\n      h: this.height,\n      ip: this.inPoint,\n      layers: this.layers.map(layer => layer.toJSON()),\n      ...(this.markers.length > 0 && { markers: this.markers.map(marker => marker.toJSON()) }),\n      meta: this.meta,\n      nm: this.name,\n      op: this.outPoint,\n      v: this.version || '5.6.0',\n      w: this.width,\n      ...(this.fonts.list.length > 0 && { fonts: this.fonts.toJSON() }),\n      chars: chars.length > 0 ? chars : undefined,\n    };\n  }\n}\n"],"names":["AssetType","this","BlendMode","FillRuleType","GradientFillType","GradientStrokeType","LayerType","LineCapType","LineJoinType","MaskMode","PropertyType","ShapeType","TrimMode","RepeaterComposite","StarType","MatteMode","EffectType","EffectValueType","TextCaps","TextGrouping","TextJustify","TextBased","TextShape","__assign","fetch"],"mappings":"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"}